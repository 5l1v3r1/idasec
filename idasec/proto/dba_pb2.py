# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dba.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='dba.proto',
  package='dba',
  syntax='proto2',
  serialized_pb=_b('\n\tdba.proto\x12\x03\x64\x62\x61\"%\n\tbitvector\x12\n\n\x02\x62v\x18\x01 \x02(\x04\x12\x0c\n\x04size\x18\x02 \x02(\r\"F\n\x0e\x64\x62\x61\x63odeaddress\x12!\n\tbitvector\x18\x01 \x02(\x0b\x32\x0e.dba.bitvector\x12\x11\n\tdbaoffset\x18\x02 \x02(\r\"\xa7\x01\n\x0b\x63odeaddress\x12\x33\n\x06typeid\x18\x01 \x02(\x0e\x32#.dba.codeaddress.typeid_codeaddress\x12\x0e\n\x06offset\x18\x02 \x01(\r\x12$\n\x07\x61\x64\x64ress\x18\x03 \x01(\x0b\x32\x13.dba.dbacodeaddress\"-\n\x12typeid_codeaddress\x12\t\n\x05Local\x10\x00\x12\x0c\n\x08NonLocal\x10\x01\"\x86\x01\n\x06\x64\x62\x61tag\x12)\n\x06typeid\x18\x01 \x02(\x0e\x32\x19.dba.dbatag.typeid_dbatag\x12$\n\x07\x61\x64\x64ress\x18\x02 \x01(\x0b\x32\x13.dba.dbacodeaddress\"+\n\rtypeid_dbatag\x12\x0b\n\x07\x44\x62\x61\x43\x61ll\x10\x01\x12\r\n\tDbaReturn\x10\x02\"\x93\x01\n\x0c\x64\x62\x61stopstate\x12\x31\n\x06typeid\x18\x01 \x02(\x0e\x32!.dba.dbastopstate.typeid_dbastate\x12\r\n\x05infos\x18\x02 \x01(\t\"A\n\x0ftypeid_dbastate\x12\x06\n\x02Ok\x10\x01\x12\x06\n\x02Ko\x10\x02\x12\r\n\tUndefined\x10\x03\x12\x0f\n\x0bUnsupported\x10\x04\"\xcb\x07\n\x07\x64\x62\x61\x65xpr\x12+\n\x06typeid\x18\x01 \x02(\x0e\x32\x1b.dba.dbaexpr.typeid_dbaexpr\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04size\x18\x03 \x01(\r\x12\x1f\n\x06\x65ndian\x18\x04 \x01(\x0e\x32\x0f.dba.endianness\x12!\n\tbitvector\x18\x05 \x01(\x0b\x32\x0e.dba.bitvector\x12\x1b\n\x05\x65xpr1\x18\x06 \x01(\x0b\x32\x0c.dba.dbaexpr\x12\x1b\n\x05\x65xpr2\x18\x07 \x01(\x0b\x32\x0c.dba.dbaexpr\x12&\n\x07unaryop\x18\t \x01(\x0e\x32\x15.dba.dbaexpr.dbaunary\x12(\n\x08\x62inaryop\x18\n \x01(\x0e\x32\x16.dba.dbaexpr.dbabinary\x12\x0b\n\x03low\x18\x0b \x01(\r\x12\x0c\n\x04high\x18\x0c \x01(\r\x12\x1a\n\x04\x63ond\x18\r \x01(\x0b\x32\x0c.dba.dbacond\"\xc1\x01\n\x0etypeid_dbaexpr\x12\x0e\n\nDbaExprVar\x10\x01\x12\x0b\n\x07\x44\x62\x61Load\x10\x02\x12\x0e\n\nDbaExprCst\x10\x03\x12\x10\n\x0c\x44\x62\x61\x45xprUnary\x10\x04\x12\x11\n\rDbaExprBinary\x10\x05\x12\x13\n\x0f\x44\x62\x61\x45xprRestrict\x10\x06\x12\x0f\n\x0b\x44\x62\x61\x45xprExtU\x10\x07\x12\x0f\n\x0b\x44\x62\x61\x45xprExtS\x10\x08\x12\x0e\n\nDbaExprIte\x10\t\x12\x16\n\x12\x44\x62\x61\x45xprAlternative\x10\n\".\n\x08\x64\x62\x61unary\x12\x11\n\rDbaUnaryMinus\x10\x01\x12\x0f\n\x0b\x44\x62\x61UnaryNot\x10\x02\"\xfb\x02\n\tdbabinary\x12\x0b\n\x07\x44\x62\x61Plus\x10\x01\x12\x0c\n\x08\x44\x62\x61Minus\x10\x02\x12\x0c\n\x08\x44\x62\x61MultU\x10\x03\x12\x0c\n\x08\x44\x62\x61MultS\x10\x04\x12\x0b\n\x07\x44\x62\x61\x44ivU\x10\x06\x12\x0b\n\x07\x44\x62\x61\x44ivS\x10\x07\x12\x0b\n\x07\x44\x62\x61ModU\x10\x08\x12\x0b\n\x07\x44\x62\x61ModS\x10\t\x12\t\n\x05\x44\x62\x61Or\x10\n\x12\n\n\x06\x44\x62\x61\x41nd\x10\x0b\x12\n\n\x06\x44\x62\x61Xor\x10\x0c\x12\r\n\tDbaConcat\x10\r\x12\x0e\n\nDbaLShiftU\x10\x0e\x12\x0e\n\nDbaRShiftU\x10\x0f\x12\x0e\n\nDbaRShiftS\x10\x10\x12\x11\n\rDbaLeftRotate\x10\x11\x12\x12\n\x0e\x44\x62\x61RightRotate\x10\x12\x12\t\n\x05\x44\x62\x61\x45q\x10\x13\x12\x0b\n\x07\x44\x62\x61\x44iff\x10\x14\x12\x0b\n\x07\x44\x62\x61LeqU\x10\x15\x12\n\n\x06\x44\x62\x61LtU\x10\x16\x12\x0b\n\x07\x44\x62\x61GeqU\x10\x17\x12\n\n\x06\x44\x62\x61GtU\x10\x18\x12\x0b\n\x07\x44\x62\x61LeqS\x10\x19\x12\n\n\x06\x44\x62\x61LtS\x10\x1a\x12\x0b\n\x07\x44\x62\x61GeqS\x10\x1b\x12\n\n\x06\x44\x62\x61GtS\x10\x1c\"\xf9\x01\n\x07\x64\x62\x61\x63ond\x12+\n\x06typeid\x18\x01 \x02(\x0e\x32\x1b.dba.dbacond.typeid_dbacond\x12\x1a\n\x04\x65xpr\x18\x02 \x01(\x0b\x32\x0c.dba.dbaexpr\x12\x1b\n\x05\x63ond1\x18\x03 \x01(\x0b\x32\x0c.dba.dbacond\x12\x1b\n\x05\x63ond2\x18\x04 \x01(\x0b\x32\x0c.dba.dbacond\"k\n\x0etypeid_dbacond\x12\x0f\n\x0b\x44\x62\x61\x43ondReif\x10\x01\x12\x0e\n\nDbaCondNot\x10\x02\x12\x0e\n\nDbaCondAnd\x10\x03\x12\r\n\tDbaCondOr\x10\x04\x12\x0b\n\x07\x44\x62\x61True\x10\x05\x12\x0c\n\x08\x44\x62\x61\x46\x61lse\x10\x06\"\xec\x01\n\x06\x64\x62\x61Lhs\x12)\n\x06typeid\x18\x01 \x02(\x0e\x32\x19.dba.dbaLhs.typeid_dbalhs\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04size\x18\x03 \x01(\r\x12\x0b\n\x03low\x18\x04 \x01(\r\x12\x0c\n\x04high\x18\x05 \x01(\r\x12\x1f\n\x06\x65ndian\x18\x06 \x01(\x0e\x32\x0f.dba.endianness\x12\x1a\n\x04\x65xpr\x18\x07 \x01(\x0b\x32\x0c.dba.dbaexpr\"C\n\rtypeid_dbalhs\x12\r\n\tDbaLhsVar\x10\x01\x12\x15\n\x11\x44\x62\x61LhsVarRestrict\x10\x02\x12\x0c\n\x08\x44\x62\x61Store\x10\x03\"\xb0\x04\n\x08\x64\x62\x61instr\x12.\n\x06typeid\x18\x01 \x02(\x0e\x32\x1e.dba.dbainstr.typeid_instrkind\x12%\n\x08location\x18\x02 \x02(\x0b\x32\x13.dba.dbacodeaddress\x12\x18\n\x03lhs\x18\x03 \x01(\x0b\x32\x0b.dba.dbaLhs\x12\x1a\n\x04\x65xpr\x18\x04 \x01(\x0b\x32\x0c.dba.dbaexpr\x12\x0e\n\x06offset\x18\x05 \x01(\r\x12!\n\x07\x61\x64\x64ress\x18\x06 \x01(\x0b\x32\x10.dba.codeaddress\x12\x19\n\x04tags\x18\x07 \x01(\x0b\x32\x0b.dba.dbatag\x12\x1a\n\x04\x63ond\x18\x08 \x01(\x0b\x32\x0c.dba.dbacond\x12$\n\tstopinfos\x18\t \x01(\x0b\x32\x11.dba.dbastopstate\x12\x1b\n\x05\x65xprs\x18\n \x03(\x0b\x32\x0c.dba.dbaexpr\"\xe9\x01\n\x10typeid_instrkind\x12\x0f\n\x0b\x44\x62\x61IkAssign\x10\x01\x12\x0e\n\nDbaIkSJump\x10\x02\x12\x0e\n\nDbaIkDJump\x10\x03\x12\x0b\n\x07\x44\x62\x61IkIf\x10\x04\x12\r\n\tDbaIkStop\x10\x05\x12\x0f\n\x0b\x44\x62\x61IkAssert\x10\x06\x12\x0f\n\x0b\x44\x62\x61IkAssume\x10\x07\x12\x15\n\x11\x44\x62\x61IkNondetAssume\x10\x08\x12\x0f\n\x0b\x44\x62\x61IkNondet\x10\t\x12\x0e\n\nDbaIkUndef\x10\n\x12\x0f\n\x0b\x44\x62\x61IkMalloc\x10\x0b\x12\r\n\tDbaIkFree\x10\x0c\x12\x0e\n\nDbaIkPrint\x10\r\")\n\x08\x64\x62\x61_list\x12\x1d\n\x06instrs\x18\x01 \x03(\x0b\x32\r.dba.dbainstr*!\n\nendianness\x12\n\n\x06Little\x10\x01\x12\x07\n\x03\x42ig\x10\x02')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_ENDIANNESS = _descriptor.EnumDescriptor(
  name='endianness',
  full_name='dba.endianness',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Little', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Big', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2657,
  serialized_end=2690,
)
_sym_db.RegisterEnumDescriptor(_ENDIANNESS)

endianness = enum_type_wrapper.EnumTypeWrapper(_ENDIANNESS)
Little = 1
Big = 2


_CODEADDRESS_TYPEID_CODEADDRESS = _descriptor.EnumDescriptor(
  name='typeid_codeaddress',
  full_name='dba.codeaddress.typeid_codeaddress',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Local', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NonLocal', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=252,
  serialized_end=297,
)
_sym_db.RegisterEnumDescriptor(_CODEADDRESS_TYPEID_CODEADDRESS)

_DBATAG_TYPEID_DBATAG = _descriptor.EnumDescriptor(
  name='typeid_dbatag',
  full_name='dba.dbatag.typeid_dbatag',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DbaCall', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaReturn', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=391,
  serialized_end=434,
)
_sym_db.RegisterEnumDescriptor(_DBATAG_TYPEID_DBATAG)

_DBASTOPSTATE_TYPEID_DBASTATE = _descriptor.EnumDescriptor(
  name='typeid_dbastate',
  full_name='dba.dbastopstate.typeid_dbastate',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Ok', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Ko', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Undefined', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Unsupported', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=519,
  serialized_end=584,
)
_sym_db.RegisterEnumDescriptor(_DBASTOPSTATE_TYPEID_DBASTATE)

_DBAEXPR_TYPEID_DBAEXPR = _descriptor.EnumDescriptor(
  name='typeid_dbaexpr',
  full_name='dba.dbaexpr.typeid_dbaexpr',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DbaExprVar', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaLoad', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaExprCst', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaExprUnary', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaExprBinary', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaExprRestrict', index=5, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaExprExtU', index=6, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaExprExtS', index=7, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaExprIte', index=8, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaExprAlternative', index=9, number=10,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=935,
  serialized_end=1128,
)
_sym_db.RegisterEnumDescriptor(_DBAEXPR_TYPEID_DBAEXPR)

_DBAEXPR_DBAUNARY = _descriptor.EnumDescriptor(
  name='dbaunary',
  full_name='dba.dbaexpr.dbaunary',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DbaUnaryMinus', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaUnaryNot', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1130,
  serialized_end=1176,
)
_sym_db.RegisterEnumDescriptor(_DBAEXPR_DBAUNARY)

_DBAEXPR_DBABINARY = _descriptor.EnumDescriptor(
  name='dbabinary',
  full_name='dba.dbaexpr.dbabinary',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DbaPlus', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaMinus', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaMultU', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaMultS', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaDivU', index=4, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaDivS', index=5, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaModU', index=6, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaModS', index=7, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaOr', index=8, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaAnd', index=9, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaXor', index=10, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaConcat', index=11, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaLShiftU', index=12, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaRShiftU', index=13, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaRShiftS', index=14, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaLeftRotate', index=15, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaRightRotate', index=16, number=18,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaEq', index=17, number=19,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaDiff', index=18, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaLeqU', index=19, number=21,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaLtU', index=20, number=22,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaGeqU', index=21, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaGtU', index=22, number=24,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaLeqS', index=23, number=25,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaLtS', index=24, number=26,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaGeqS', index=25, number=27,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaGtS', index=26, number=28,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1179,
  serialized_end=1558,
)
_sym_db.RegisterEnumDescriptor(_DBAEXPR_DBABINARY)

_DBACOND_TYPEID_DBACOND = _descriptor.EnumDescriptor(
  name='typeid_dbacond',
  full_name='dba.dbacond.typeid_dbacond',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DbaCondReif', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaCondNot', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaCondAnd', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaCondOr', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaTrue', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaFalse', index=5, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1703,
  serialized_end=1810,
)
_sym_db.RegisterEnumDescriptor(_DBACOND_TYPEID_DBACOND)

_DBALHS_TYPEID_DBALHS = _descriptor.EnumDescriptor(
  name='typeid_dbalhs',
  full_name='dba.dbaLhs.typeid_dbalhs',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DbaLhsVar', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaLhsVarRestrict', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaStore', index=2, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1982,
  serialized_end=2049,
)
_sym_db.RegisterEnumDescriptor(_DBALHS_TYPEID_DBALHS)

_DBAINSTR_TYPEID_INSTRKIND = _descriptor.EnumDescriptor(
  name='typeid_instrkind',
  full_name='dba.dbainstr.typeid_instrkind',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DbaIkAssign', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaIkSJump', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaIkDJump', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaIkIf', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaIkStop', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaIkAssert', index=5, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaIkAssume', index=6, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaIkNondetAssume', index=7, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaIkNondet', index=8, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaIkUndef', index=9, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaIkMalloc', index=10, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaIkFree', index=11, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DbaIkPrint', index=12, number=13,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2379,
  serialized_end=2612,
)
_sym_db.RegisterEnumDescriptor(_DBAINSTR_TYPEID_INSTRKIND)


_BITVECTOR = _descriptor.Descriptor(
  name='bitvector',
  full_name='dba.bitvector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bv', full_name='dba.bitvector.bv', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='dba.bitvector.size', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=55,
)


_DBACODEADDRESS = _descriptor.Descriptor(
  name='dbacodeaddress',
  full_name='dba.dbacodeaddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bitvector', full_name='dba.dbacodeaddress.bitvector', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dbaoffset', full_name='dba.dbacodeaddress.dbaoffset', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=57,
  serialized_end=127,
)


_CODEADDRESS = _descriptor.Descriptor(
  name='codeaddress',
  full_name='dba.codeaddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='typeid', full_name='dba.codeaddress.typeid', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='dba.codeaddress.offset', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='address', full_name='dba.codeaddress.address', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CODEADDRESS_TYPEID_CODEADDRESS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=130,
  serialized_end=297,
)


_DBATAG = _descriptor.Descriptor(
  name='dbatag',
  full_name='dba.dbatag',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='typeid', full_name='dba.dbatag.typeid', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='address', full_name='dba.dbatag.address', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _DBATAG_TYPEID_DBATAG,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=300,
  serialized_end=434,
)


_DBASTOPSTATE = _descriptor.Descriptor(
  name='dbastopstate',
  full_name='dba.dbastopstate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='typeid', full_name='dba.dbastopstate.typeid', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='infos', full_name='dba.dbastopstate.infos', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _DBASTOPSTATE_TYPEID_DBASTATE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=437,
  serialized_end=584,
)


_DBAEXPR = _descriptor.Descriptor(
  name='dbaexpr',
  full_name='dba.dbaexpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='typeid', full_name='dba.dbaexpr.typeid', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='dba.dbaexpr.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='dba.dbaexpr.size', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='endian', full_name='dba.dbaexpr.endian', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bitvector', full_name='dba.dbaexpr.bitvector', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='expr1', full_name='dba.dbaexpr.expr1', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='expr2', full_name='dba.dbaexpr.expr2', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unaryop', full_name='dba.dbaexpr.unaryop', index=7,
      number=9, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='binaryop', full_name='dba.dbaexpr.binaryop', index=8,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='low', full_name='dba.dbaexpr.low', index=9,
      number=11, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='high', full_name='dba.dbaexpr.high', index=10,
      number=12, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cond', full_name='dba.dbaexpr.cond', index=11,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _DBAEXPR_TYPEID_DBAEXPR,
    _DBAEXPR_DBAUNARY,
    _DBAEXPR_DBABINARY,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=587,
  serialized_end=1558,
)


_DBACOND = _descriptor.Descriptor(
  name='dbacond',
  full_name='dba.dbacond',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='typeid', full_name='dba.dbacond.typeid', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='expr', full_name='dba.dbacond.expr', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cond1', full_name='dba.dbacond.cond1', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cond2', full_name='dba.dbacond.cond2', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _DBACOND_TYPEID_DBACOND,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1561,
  serialized_end=1810,
)


_DBALHS = _descriptor.Descriptor(
  name='dbaLhs',
  full_name='dba.dbaLhs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='typeid', full_name='dba.dbaLhs.typeid', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='dba.dbaLhs.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='dba.dbaLhs.size', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='low', full_name='dba.dbaLhs.low', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='high', full_name='dba.dbaLhs.high', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='endian', full_name='dba.dbaLhs.endian', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='expr', full_name='dba.dbaLhs.expr', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _DBALHS_TYPEID_DBALHS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1813,
  serialized_end=2049,
)


_DBAINSTR = _descriptor.Descriptor(
  name='dbainstr',
  full_name='dba.dbainstr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='typeid', full_name='dba.dbainstr.typeid', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='location', full_name='dba.dbainstr.location', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lhs', full_name='dba.dbainstr.lhs', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='expr', full_name='dba.dbainstr.expr', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='dba.dbainstr.offset', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='address', full_name='dba.dbainstr.address', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tags', full_name='dba.dbainstr.tags', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cond', full_name='dba.dbainstr.cond', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stopinfos', full_name='dba.dbainstr.stopinfos', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exprs', full_name='dba.dbainstr.exprs', index=9,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _DBAINSTR_TYPEID_INSTRKIND,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2052,
  serialized_end=2612,
)


_DBA_LIST = _descriptor.Descriptor(
  name='dba_list',
  full_name='dba.dba_list',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='instrs', full_name='dba.dba_list.instrs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2614,
  serialized_end=2655,
)

_DBACODEADDRESS.fields_by_name['bitvector'].message_type = _BITVECTOR
_CODEADDRESS.fields_by_name['typeid'].enum_type = _CODEADDRESS_TYPEID_CODEADDRESS
_CODEADDRESS.fields_by_name['address'].message_type = _DBACODEADDRESS
_CODEADDRESS_TYPEID_CODEADDRESS.containing_type = _CODEADDRESS
_DBATAG.fields_by_name['typeid'].enum_type = _DBATAG_TYPEID_DBATAG
_DBATAG.fields_by_name['address'].message_type = _DBACODEADDRESS
_DBATAG_TYPEID_DBATAG.containing_type = _DBATAG
_DBASTOPSTATE.fields_by_name['typeid'].enum_type = _DBASTOPSTATE_TYPEID_DBASTATE
_DBASTOPSTATE_TYPEID_DBASTATE.containing_type = _DBASTOPSTATE
_DBAEXPR.fields_by_name['typeid'].enum_type = _DBAEXPR_TYPEID_DBAEXPR
_DBAEXPR.fields_by_name['endian'].enum_type = _ENDIANNESS
_DBAEXPR.fields_by_name['bitvector'].message_type = _BITVECTOR
_DBAEXPR.fields_by_name['expr1'].message_type = _DBAEXPR
_DBAEXPR.fields_by_name['expr2'].message_type = _DBAEXPR
_DBAEXPR.fields_by_name['unaryop'].enum_type = _DBAEXPR_DBAUNARY
_DBAEXPR.fields_by_name['binaryop'].enum_type = _DBAEXPR_DBABINARY
_DBAEXPR.fields_by_name['cond'].message_type = _DBACOND
_DBAEXPR_TYPEID_DBAEXPR.containing_type = _DBAEXPR
_DBAEXPR_DBAUNARY.containing_type = _DBAEXPR
_DBAEXPR_DBABINARY.containing_type = _DBAEXPR
_DBACOND.fields_by_name['typeid'].enum_type = _DBACOND_TYPEID_DBACOND
_DBACOND.fields_by_name['expr'].message_type = _DBAEXPR
_DBACOND.fields_by_name['cond1'].message_type = _DBACOND
_DBACOND.fields_by_name['cond2'].message_type = _DBACOND
_DBACOND_TYPEID_DBACOND.containing_type = _DBACOND
_DBALHS.fields_by_name['typeid'].enum_type = _DBALHS_TYPEID_DBALHS
_DBALHS.fields_by_name['endian'].enum_type = _ENDIANNESS
_DBALHS.fields_by_name['expr'].message_type = _DBAEXPR
_DBALHS_TYPEID_DBALHS.containing_type = _DBALHS
_DBAINSTR.fields_by_name['typeid'].enum_type = _DBAINSTR_TYPEID_INSTRKIND
_DBAINSTR.fields_by_name['location'].message_type = _DBACODEADDRESS
_DBAINSTR.fields_by_name['lhs'].message_type = _DBALHS
_DBAINSTR.fields_by_name['expr'].message_type = _DBAEXPR
_DBAINSTR.fields_by_name['address'].message_type = _CODEADDRESS
_DBAINSTR.fields_by_name['tags'].message_type = _DBATAG
_DBAINSTR.fields_by_name['cond'].message_type = _DBACOND
_DBAINSTR.fields_by_name['stopinfos'].message_type = _DBASTOPSTATE
_DBAINSTR.fields_by_name['exprs'].message_type = _DBAEXPR
_DBAINSTR_TYPEID_INSTRKIND.containing_type = _DBAINSTR
_DBA_LIST.fields_by_name['instrs'].message_type = _DBAINSTR
DESCRIPTOR.message_types_by_name['bitvector'] = _BITVECTOR
DESCRIPTOR.message_types_by_name['dbacodeaddress'] = _DBACODEADDRESS
DESCRIPTOR.message_types_by_name['codeaddress'] = _CODEADDRESS
DESCRIPTOR.message_types_by_name['dbatag'] = _DBATAG
DESCRIPTOR.message_types_by_name['dbastopstate'] = _DBASTOPSTATE
DESCRIPTOR.message_types_by_name['dbaexpr'] = _DBAEXPR
DESCRIPTOR.message_types_by_name['dbacond'] = _DBACOND
DESCRIPTOR.message_types_by_name['dbaLhs'] = _DBALHS
DESCRIPTOR.message_types_by_name['dbainstr'] = _DBAINSTR
DESCRIPTOR.message_types_by_name['dba_list'] = _DBA_LIST
DESCRIPTOR.enum_types_by_name['endianness'] = _ENDIANNESS

bitvector = _reflection.GeneratedProtocolMessageType('bitvector', (_message.Message,), dict(
  DESCRIPTOR = _BITVECTOR,
  __module__ = 'dba_pb2'
  # @@protoc_insertion_point(class_scope:dba.bitvector)
  ))
_sym_db.RegisterMessage(bitvector)

dbacodeaddress = _reflection.GeneratedProtocolMessageType('dbacodeaddress', (_message.Message,), dict(
  DESCRIPTOR = _DBACODEADDRESS,
  __module__ = 'dba_pb2'
  # @@protoc_insertion_point(class_scope:dba.dbacodeaddress)
  ))
_sym_db.RegisterMessage(dbacodeaddress)

codeaddress = _reflection.GeneratedProtocolMessageType('codeaddress', (_message.Message,), dict(
  DESCRIPTOR = _CODEADDRESS,
  __module__ = 'dba_pb2'
  # @@protoc_insertion_point(class_scope:dba.codeaddress)
  ))
_sym_db.RegisterMessage(codeaddress)

dbatag = _reflection.GeneratedProtocolMessageType('dbatag', (_message.Message,), dict(
  DESCRIPTOR = _DBATAG,
  __module__ = 'dba_pb2'
  # @@protoc_insertion_point(class_scope:dba.dbatag)
  ))
_sym_db.RegisterMessage(dbatag)

dbastopstate = _reflection.GeneratedProtocolMessageType('dbastopstate', (_message.Message,), dict(
  DESCRIPTOR = _DBASTOPSTATE,
  __module__ = 'dba_pb2'
  # @@protoc_insertion_point(class_scope:dba.dbastopstate)
  ))
_sym_db.RegisterMessage(dbastopstate)

dbaexpr = _reflection.GeneratedProtocolMessageType('dbaexpr', (_message.Message,), dict(
  DESCRIPTOR = _DBAEXPR,
  __module__ = 'dba_pb2'
  # @@protoc_insertion_point(class_scope:dba.dbaexpr)
  ))
_sym_db.RegisterMessage(dbaexpr)

dbacond = _reflection.GeneratedProtocolMessageType('dbacond', (_message.Message,), dict(
  DESCRIPTOR = _DBACOND,
  __module__ = 'dba_pb2'
  # @@protoc_insertion_point(class_scope:dba.dbacond)
  ))
_sym_db.RegisterMessage(dbacond)

dbaLhs = _reflection.GeneratedProtocolMessageType('dbaLhs', (_message.Message,), dict(
  DESCRIPTOR = _DBALHS,
  __module__ = 'dba_pb2'
  # @@protoc_insertion_point(class_scope:dba.dbaLhs)
  ))
_sym_db.RegisterMessage(dbaLhs)

dbainstr = _reflection.GeneratedProtocolMessageType('dbainstr', (_message.Message,), dict(
  DESCRIPTOR = _DBAINSTR,
  __module__ = 'dba_pb2'
  # @@protoc_insertion_point(class_scope:dba.dbainstr)
  ))
_sym_db.RegisterMessage(dbainstr)

dba_list = _reflection.GeneratedProtocolMessageType('dba_list', (_message.Message,), dict(
  DESCRIPTOR = _DBA_LIST,
  __module__ = 'dba_pb2'
  # @@protoc_insertion_point(class_scope:dba.dba_list)
  ))
_sym_db.RegisterMessage(dba_list)


# @@protoc_insertion_point(module_scope)
