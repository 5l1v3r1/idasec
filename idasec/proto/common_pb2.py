# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='common.proto',
  package='common',
  syntax='proto2',
  serialized_pb=_b('\n\x0c\x63ommon.proto\x12\x06\x63ommon\"\xd2\x01\n\x10register_value_t\x12$\n\x06typeid\x18\x01 \x02(\x0e\x32\x14.common.proto_size_t\x12\x11\n\x07value_8\x18\x02 \x01(\rH\x00\x12\x12\n\x08value_16\x18\x03 \x01(\rH\x00\x12\x12\n\x08value_32\x18\x04 \x01(\rH\x00\x12\x12\n\x08value_64\x18\x05 \x01(\x04H\x00\x12\x12\n\x08value_80\x18\x06 \x01(\x0cH\x00\x12\x13\n\tvalue_128\x18\x07 \x01(\x0cH\x00\x12\x13\n\tvalue_256\x18\x08 \x01(\x0cH\x00\x42\x0b\n\tvalue_cnt\"C\n\nregister_t\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\'\n\x05value\x18\x02 \x02(\x0b\x32\x18.common.register_value_t\"\'\n\x08memory_t\x12\x0c\n\x04\x61\x64\x64r\x18\x01 \x02(\x04\x12\r\n\x05value\x18\x02 \x02(\x0c\"2\n\x13indirect_register_t\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\x0c\"[\n\nmemory_pol\x12%\n\x04\x61\x64\x64r\x18\x01 \x01(\x0e\x32\x0e.common.action:\x07\x44\x45\x46\x41ULT\x12&\n\x05value\x18\x02 \x01(\x0e\x32\x0e.common.action:\x07\x44\x45\x46\x41ULT*:\n\nsmt_result\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x07\n\x03SAT\x10\x01\x12\t\n\x05UNSAT\x10\x02\x12\x0b\n\x07TIMEOUT\x10\x03*$\n\x0etracing_action\x12\x08\n\x04SKIP\x10\x00\x12\x08\n\x04INTO\x10\x01*K\n\x06\x61\x63tion\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05PATCH\x10\x01\x12\x08\n\x04\x43ONC\x10\x02\x12\x08\n\x04SYMB\x10\x03\x12\t\n\x05LOGIC\x10\x04\x12\n\n\x06IGNORE\x10\x05*X\n\x11\x63\x61ll_convention_t\x12\x0f\n\x0bUNKNOWN_CVT\x10\x00\x12\t\n\x05\x43\x44\x45\x43L\x10\x01\x12\x0c\n\x08\x46\x41STCALL\x10\x02\x12\x0b\n\x07STDCALL\x10\x03\x12\x0c\n\x08THISCALL\x10\x04*(\n\tir_kind_t\x12\x07\n\x03\x44\x42\x41\x10\x01\x12\x07\n\x03\x42\x41P\x10\x02\x12\t\n\x05MIASM\x10\x03*6\n\x08solver_t\x12\x06\n\x02Z3\x10\x01\x12\r\n\tBOOLECTOR\x10\x02\x12\x08\n\x04\x43VC4\x10\x03\x12\t\n\x05YICES\x10\x04*1\n\x14\x61nalysis_direction_t\x12\x0b\n\x07\x46ORWARD\x10\x01\x12\x0c\n\x08\x42\x41\x43KWARD\x10\x02*n\n\x0cproto_size_t\x12\x10\n\x0cINVALID_SIZE\x10\x00\x12\x08\n\x04\x42IT8\x10\x01\x12\t\n\x05\x42IT16\x10\x02\x12\t\n\x05\x42IT32\x10\x03\x12\t\n\x05\x42IT64\x10\x04\x12\t\n\x05\x42IT80\x10\x05\x12\n\n\x06\x42IT128\x10\x06\x12\n\n\x06\x42IT256\x10\x07')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_SMT_RESULT = _descriptor.EnumDescriptor(
  name='smt_result',
  full_name='common.smt_result',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNSAT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TIMEOUT', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=492,
  serialized_end=550,
)
_sym_db.RegisterEnumDescriptor(_SMT_RESULT)

smt_result = enum_type_wrapper.EnumTypeWrapper(_SMT_RESULT)
_TRACING_ACTION = _descriptor.EnumDescriptor(
  name='tracing_action',
  full_name='common.tracing_action',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SKIP', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTO', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=552,
  serialized_end=588,
)
_sym_db.RegisterEnumDescriptor(_TRACING_ACTION)

tracing_action = enum_type_wrapper.EnumTypeWrapper(_TRACING_ACTION)
_ACTION = _descriptor.EnumDescriptor(
  name='action',
  full_name='common.action',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DEFAULT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PATCH', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONC', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYMB', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOGIC', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IGNORE', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=590,
  serialized_end=665,
)
_sym_db.RegisterEnumDescriptor(_ACTION)

action = enum_type_wrapper.EnumTypeWrapper(_ACTION)
_CALL_CONVENTION_T = _descriptor.EnumDescriptor(
  name='call_convention_t',
  full_name='common.call_convention_t',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_CVT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CDECL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FASTCALL', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STDCALL', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='THISCALL', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=667,
  serialized_end=755,
)
_sym_db.RegisterEnumDescriptor(_CALL_CONVENTION_T)

call_convention_t = enum_type_wrapper.EnumTypeWrapper(_CALL_CONVENTION_T)
_IR_KIND_T = _descriptor.EnumDescriptor(
  name='ir_kind_t',
  full_name='common.ir_kind_t',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DBA', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BAP', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIASM', index=2, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=757,
  serialized_end=797,
)
_sym_db.RegisterEnumDescriptor(_IR_KIND_T)

ir_kind_t = enum_type_wrapper.EnumTypeWrapper(_IR_KIND_T)
_SOLVER_T = _descriptor.EnumDescriptor(
  name='solver_t',
  full_name='common.solver_t',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Z3', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BOOLECTOR', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CVC4', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='YICES', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=799,
  serialized_end=853,
)
_sym_db.RegisterEnumDescriptor(_SOLVER_T)

solver_t = enum_type_wrapper.EnumTypeWrapper(_SOLVER_T)
_ANALYSIS_DIRECTION_T = _descriptor.EnumDescriptor(
  name='analysis_direction_t',
  full_name='common.analysis_direction_t',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FORWARD', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BACKWARD', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=855,
  serialized_end=904,
)
_sym_db.RegisterEnumDescriptor(_ANALYSIS_DIRECTION_T)

analysis_direction_t = enum_type_wrapper.EnumTypeWrapper(_ANALYSIS_DIRECTION_T)
_PROTO_SIZE_T = _descriptor.EnumDescriptor(
  name='proto_size_t',
  full_name='common.proto_size_t',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INVALID_SIZE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BIT8', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BIT16', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BIT32', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BIT64', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BIT80', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BIT128', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BIT256', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=906,
  serialized_end=1016,
)
_sym_db.RegisterEnumDescriptor(_PROTO_SIZE_T)

proto_size_t = enum_type_wrapper.EnumTypeWrapper(_PROTO_SIZE_T)
UNKNOWN = 0
SAT = 1
UNSAT = 2
TIMEOUT = 3
SKIP = 0
INTO = 1
DEFAULT = 0
PATCH = 1
CONC = 2
SYMB = 3
LOGIC = 4
IGNORE = 5
UNKNOWN_CVT = 0
CDECL = 1
FASTCALL = 2
STDCALL = 3
THISCALL = 4
DBA = 1
BAP = 2
MIASM = 3
Z3 = 1
BOOLECTOR = 2
CVC4 = 3
YICES = 4
FORWARD = 1
BACKWARD = 2
INVALID_SIZE = 0
BIT8 = 1
BIT16 = 2
BIT32 = 3
BIT64 = 4
BIT80 = 5
BIT128 = 6
BIT256 = 7



_REGISTER_VALUE_T = _descriptor.Descriptor(
  name='register_value_t',
  full_name='common.register_value_t',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='typeid', full_name='common.register_value_t.typeid', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value_8', full_name='common.register_value_t.value_8', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value_16', full_name='common.register_value_t.value_16', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value_32', full_name='common.register_value_t.value_32', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value_64', full_name='common.register_value_t.value_64', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value_80', full_name='common.register_value_t.value_80', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value_128', full_name='common.register_value_t.value_128', index=6,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value_256', full_name='common.register_value_t.value_256', index=7,
      number=8, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value_cnt', full_name='common.register_value_t.value_cnt',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=25,
  serialized_end=235,
)


_REGISTER_T = _descriptor.Descriptor(
  name='register_t',
  full_name='common.register_t',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.register_t.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='common.register_t.value', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=237,
  serialized_end=304,
)


_MEMORY_T = _descriptor.Descriptor(
  name='memory_t',
  full_name='common.memory_t',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='common.memory_t.addr', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='common.memory_t.value', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=306,
  serialized_end=345,
)


_INDIRECT_REGISTER_T = _descriptor.Descriptor(
  name='indirect_register_t',
  full_name='common.indirect_register_t',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='common.indirect_register_t.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='common.indirect_register_t.value', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=347,
  serialized_end=397,
)


_MEMORY_POL = _descriptor.Descriptor(
  name='memory_pol',
  full_name='common.memory_pol',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='common.memory_pol.addr', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='common.memory_pol.value', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=399,
  serialized_end=490,
)

_REGISTER_VALUE_T.fields_by_name['typeid'].enum_type = _PROTO_SIZE_T
_REGISTER_VALUE_T.oneofs_by_name['value_cnt'].fields.append(
  _REGISTER_VALUE_T.fields_by_name['value_8'])
_REGISTER_VALUE_T.fields_by_name['value_8'].containing_oneof = _REGISTER_VALUE_T.oneofs_by_name['value_cnt']
_REGISTER_VALUE_T.oneofs_by_name['value_cnt'].fields.append(
  _REGISTER_VALUE_T.fields_by_name['value_16'])
_REGISTER_VALUE_T.fields_by_name['value_16'].containing_oneof = _REGISTER_VALUE_T.oneofs_by_name['value_cnt']
_REGISTER_VALUE_T.oneofs_by_name['value_cnt'].fields.append(
  _REGISTER_VALUE_T.fields_by_name['value_32'])
_REGISTER_VALUE_T.fields_by_name['value_32'].containing_oneof = _REGISTER_VALUE_T.oneofs_by_name['value_cnt']
_REGISTER_VALUE_T.oneofs_by_name['value_cnt'].fields.append(
  _REGISTER_VALUE_T.fields_by_name['value_64'])
_REGISTER_VALUE_T.fields_by_name['value_64'].containing_oneof = _REGISTER_VALUE_T.oneofs_by_name['value_cnt']
_REGISTER_VALUE_T.oneofs_by_name['value_cnt'].fields.append(
  _REGISTER_VALUE_T.fields_by_name['value_80'])
_REGISTER_VALUE_T.fields_by_name['value_80'].containing_oneof = _REGISTER_VALUE_T.oneofs_by_name['value_cnt']
_REGISTER_VALUE_T.oneofs_by_name['value_cnt'].fields.append(
  _REGISTER_VALUE_T.fields_by_name['value_128'])
_REGISTER_VALUE_T.fields_by_name['value_128'].containing_oneof = _REGISTER_VALUE_T.oneofs_by_name['value_cnt']
_REGISTER_VALUE_T.oneofs_by_name['value_cnt'].fields.append(
  _REGISTER_VALUE_T.fields_by_name['value_256'])
_REGISTER_VALUE_T.fields_by_name['value_256'].containing_oneof = _REGISTER_VALUE_T.oneofs_by_name['value_cnt']
_REGISTER_T.fields_by_name['value'].message_type = _REGISTER_VALUE_T
_MEMORY_POL.fields_by_name['addr'].enum_type = _ACTION
_MEMORY_POL.fields_by_name['value'].enum_type = _ACTION
DESCRIPTOR.message_types_by_name['register_value_t'] = _REGISTER_VALUE_T
DESCRIPTOR.message_types_by_name['register_t'] = _REGISTER_T
DESCRIPTOR.message_types_by_name['memory_t'] = _MEMORY_T
DESCRIPTOR.message_types_by_name['indirect_register_t'] = _INDIRECT_REGISTER_T
DESCRIPTOR.message_types_by_name['memory_pol'] = _MEMORY_POL
DESCRIPTOR.enum_types_by_name['smt_result'] = _SMT_RESULT
DESCRIPTOR.enum_types_by_name['tracing_action'] = _TRACING_ACTION
DESCRIPTOR.enum_types_by_name['action'] = _ACTION
DESCRIPTOR.enum_types_by_name['call_convention_t'] = _CALL_CONVENTION_T
DESCRIPTOR.enum_types_by_name['ir_kind_t'] = _IR_KIND_T
DESCRIPTOR.enum_types_by_name['solver_t'] = _SOLVER_T
DESCRIPTOR.enum_types_by_name['analysis_direction_t'] = _ANALYSIS_DIRECTION_T
DESCRIPTOR.enum_types_by_name['proto_size_t'] = _PROTO_SIZE_T

register_value_t = _reflection.GeneratedProtocolMessageType('register_value_t', (_message.Message,), dict(
  DESCRIPTOR = _REGISTER_VALUE_T,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.register_value_t)
  ))
_sym_db.RegisterMessage(register_value_t)

register_t = _reflection.GeneratedProtocolMessageType('register_t', (_message.Message,), dict(
  DESCRIPTOR = _REGISTER_T,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.register_t)
  ))
_sym_db.RegisterMessage(register_t)

memory_t = _reflection.GeneratedProtocolMessageType('memory_t', (_message.Message,), dict(
  DESCRIPTOR = _MEMORY_T,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.memory_t)
  ))
_sym_db.RegisterMessage(memory_t)

indirect_register_t = _reflection.GeneratedProtocolMessageType('indirect_register_t', (_message.Message,), dict(
  DESCRIPTOR = _INDIRECT_REGISTER_T,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.indirect_register_t)
  ))
_sym_db.RegisterMessage(indirect_register_t)

memory_pol = _reflection.GeneratedProtocolMessageType('memory_pol', (_message.Message,), dict(
  DESCRIPTOR = _MEMORY_POL,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.memory_pol)
  ))
_sym_db.RegisterMessage(memory_pol)


# @@protoc_insertion_point(module_scope)
